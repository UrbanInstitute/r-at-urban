{"title":"source(here::here(\"getting-data\", \"census_api_key.R\"))","markdown":{"yaml":{"output":{"html_document":{"includes":{"in_header":"analytics.html"},"css":"styles.css","code_folding":"show","toc":true,"toc_float":true,"pandoc_args":"--tab-stop=2"}}},"headingText":"source(here::here(\"getting-data\", \"census_api_key.R\"))","containsRefs":false,"markdown":"\n\n<link rel=\"stylesheet\" href=\"//fonts.googleapis.com/css?family=Lato\" />\n\n::: {#header}\n<img src=\"intro-to-r/images/urban-institute-logo.png\" width=\"350\"/>\n:::\n\n```{r echo = FALSE}\n```\n\n```{r markdown-setup, include=FALSE}\n\nknitr::opts_chunk$set(fig.path = \"intro-to-r/www/images/\")\nknitr::opts_chunk$set(message = FALSE)\nknitr::opts_chunk$set(warning = FALSE)\nknitr::opts_chunk$set(echo = TRUE)\n\n\noptions(scipen = 999)\n```\n\n# Introduction\n\nThis guide outlines some useful workflows for pulling data sets commonly used by the Urban Institute.\n\n## `library(tidycensus)`\n\n`library(tidycensus)` by Kyle Walker ([complete intro here](https://walkerke.github.io/tidycensus/)) is the best tool for accessing some Census data sets in R from the Census Bureau API. The package returns tidy data frames and can easily pull shapefiles by adding `geometry = TRUE`.\n\nYou will need to [apply for a Census API key](https://api.census.gov/data/key_signup.html) and [add it to your R session](https://walkerke.github.io/tidycensus/articles/basic-usage.html). Don't add your API key to your script and don't add it to a GitHub repository!\n\nHere is a simple example for one state with shapefiles:\n\n```{r tidycensus}\nlibrary(tidyverse)\nlibrary(purrr)\nlibrary(tidycensus)\n\n# pull median household income and shapefiles for Census tracts in Alabama\nget_acs(geography = \"tract\", \n\t\t\t\tvariables = \"B19013_001\", \n\t\t\t\tstate = \"01\",\n\t\t\t\tyear = 2015,\n\t\t\t\tgeometry = TRUE,\n\t\t\t\tprogress = FALSE)\n```\n\nSmaller geographies like Census tracts can only be pulled state-by-state. This example demonstrates how to iterate across FIPS codes to pull Census tracts for multiple states. The process is as follows:\n\n1.  Pick the variables of interest\n2.  Create a vector of state FIPS codes for the states of interest\n3.  Create a custom function that works on a single state FIPS code\n4.  Iterate the function along the vector of state FIPS codes with `map_df()` from `library(purrr)`\n\nHere is an example that pulls median household income at the Census tract level for multiple states:\n\n```{r tidycensus-iteration}\n# variables of interest\nvars <- c(\n  \"B19013_001\"  # median household income estimate\n)\n\n# states of interest: alabama, alaska, arizona\nstate_fips <- c(\"01\", \"02\", \"04\")\n\t\n# create a custom function that works for one state\nget_income <- function(state_fips) {\n\t\n\tincome_data <- get_acs(geography = \"tract\", \n\t\t\t\t\t\t\t\t\t\t\t\t variables = vars, \n\t\t\t\t\t\t\t\t\t\t\t\t state = state_fips,\n\t\t\t\t\t\t\t\t\t\t\t\t year = 2015)\n\t\n\treturn(income_data)\n\t\n}\n\n# iterate the function\nmap_df(.x = state_fips, # iterate along the vector of state fips codes\n\t\t\t .f = get_income) # apply get_income() to each fips_code  \n```\n\n`library(tidycensus)` works well with `library(tidyverse)` and enables access to geospatial data, but it is limited to only some Census Bureau data sets. The next package has less functionality but allows for accessing any data available on the Census API.\n\n<br>\n\n## `library(censusapi)`\n\n`library(censusapi)` by Hannah Recht ([complete intro here](https://cran.r-project.org/web/packages/censusapi/vignettes/getting-started.html)) can access any published table that is accessible through the Census Bureau API. A full listing is available [here](https://api.census.gov/data.html).\n\nYou will need to [apply for a Census API key](https://api.census.gov/data/key_signup.html) and [add it to your R session](https://cran.r-project.org/web/packages/censusapi/vignettes/getting-started.html). Don't add your API key to your script and don't add it to a GitHub repository!\n\nHere is a simple example that pulls median household income and its margin of error for Census tracts in Alabama:\n\n```{r censusapi}\nlibrary(tidyverse)\nlibrary(purrr)\nlibrary(censusapi)\nvars <- c(\n  \"B19013_001E\",  # median household income estimate\n  \"B19013_001M\"   # median household income margin of error\n)\n\ngetCensus(name = \"acs/acs5\",\n\t\t\t\t\tkey = Sys.getenv(\"CENSUS_API_KEY\"),\n\t\t\t\t\tvars = vars, \n\t\t\t\t\tregion = \"tract:*\",\n\t\t\t\t\tregionin = \"state:01\",\n\t\t\t\t\tvintage = 2015) %>%\n\tas_tibble()\n```\n\nSmaller geographies like Census tracts can only be pulled state-by-state. This example demonstrates how to iterate across FIPS codes to pull Census tracts for multiple states. The process is as follows:\n\n1.  Pick the variables of interest\n2.  Create a vector of state FIPS codes for the states of interest\n3.  Create a custom function that works on a single state FIPS code\n4.  Iterate the function along the vector of state FIPS codes with `map_df()` from `library(purrr)`\n\nHere is an example that pulls median household income at the Census tract level for multiple states:\n\n```{r censusapi-iteration}\n# variables of interest\nvars <- c(\n  \"B19013_001E\",  # median household income estimate\n  \"B19013_001M\"   # median household income margin of error\n)\n\n# states of interest: alabama, alaska, arizona\nstate_fips <- c(\"01\", \"02\", \"04\")\n\t\n# create a custom function that works for one state\nget_income <- function(state_fips) {\n\t\n\tincome_data <- getCensus(name = \"acs/acs5\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t key = Sys.getenv(\"CENSUS_API_KEY\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\t vars = vars, \n\t\t\t\t\t\t\t\t\t\t\t\t\t region = \"tract:*\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t regionin = paste0(\"state:\", state_fips),\n\t\t\t\t\t\t\t\t\t\t\t\t\t vintage = 2015)\n\t\n\treturn(income_data)\n\t\n}\n\n# iterate the function\nmap_df(.x = state_fips, # iterate along the vector of state fips codes\n\t\t\t .f = get_income) %>% # apply get_income() to each fips_code  \n\tas_tibble() \n```\n","srcMarkdownNoYaml":"\n\n<link rel=\"stylesheet\" href=\"//fonts.googleapis.com/css?family=Lato\" />\n\n::: {#header}\n<img src=\"intro-to-r/images/urban-institute-logo.png\" width=\"350\"/>\n:::\n\n```{r echo = FALSE}\n# source(here::here(\"getting-data\", \"census_api_key.R\"))\n```\n\n```{r markdown-setup, include=FALSE}\n\nknitr::opts_chunk$set(fig.path = \"intro-to-r/www/images/\")\nknitr::opts_chunk$set(message = FALSE)\nknitr::opts_chunk$set(warning = FALSE)\nknitr::opts_chunk$set(echo = TRUE)\n\n\noptions(scipen = 999)\n```\n\n# Introduction\n\nThis guide outlines some useful workflows for pulling data sets commonly used by the Urban Institute.\n\n## `library(tidycensus)`\n\n`library(tidycensus)` by Kyle Walker ([complete intro here](https://walkerke.github.io/tidycensus/)) is the best tool for accessing some Census data sets in R from the Census Bureau API. The package returns tidy data frames and can easily pull shapefiles by adding `geometry = TRUE`.\n\nYou will need to [apply for a Census API key](https://api.census.gov/data/key_signup.html) and [add it to your R session](https://walkerke.github.io/tidycensus/articles/basic-usage.html). Don't add your API key to your script and don't add it to a GitHub repository!\n\nHere is a simple example for one state with shapefiles:\n\n```{r tidycensus}\nlibrary(tidyverse)\nlibrary(purrr)\nlibrary(tidycensus)\n\n# pull median household income and shapefiles for Census tracts in Alabama\nget_acs(geography = \"tract\", \n\t\t\t\tvariables = \"B19013_001\", \n\t\t\t\tstate = \"01\",\n\t\t\t\tyear = 2015,\n\t\t\t\tgeometry = TRUE,\n\t\t\t\tprogress = FALSE)\n```\n\nSmaller geographies like Census tracts can only be pulled state-by-state. This example demonstrates how to iterate across FIPS codes to pull Census tracts for multiple states. The process is as follows:\n\n1.  Pick the variables of interest\n2.  Create a vector of state FIPS codes for the states of interest\n3.  Create a custom function that works on a single state FIPS code\n4.  Iterate the function along the vector of state FIPS codes with `map_df()` from `library(purrr)`\n\nHere is an example that pulls median household income at the Census tract level for multiple states:\n\n```{r tidycensus-iteration}\n# variables of interest\nvars <- c(\n  \"B19013_001\"  # median household income estimate\n)\n\n# states of interest: alabama, alaska, arizona\nstate_fips <- c(\"01\", \"02\", \"04\")\n\t\n# create a custom function that works for one state\nget_income <- function(state_fips) {\n\t\n\tincome_data <- get_acs(geography = \"tract\", \n\t\t\t\t\t\t\t\t\t\t\t\t variables = vars, \n\t\t\t\t\t\t\t\t\t\t\t\t state = state_fips,\n\t\t\t\t\t\t\t\t\t\t\t\t year = 2015)\n\t\n\treturn(income_data)\n\t\n}\n\n# iterate the function\nmap_df(.x = state_fips, # iterate along the vector of state fips codes\n\t\t\t .f = get_income) # apply get_income() to each fips_code  \n```\n\n`library(tidycensus)` works well with `library(tidyverse)` and enables access to geospatial data, but it is limited to only some Census Bureau data sets. The next package has less functionality but allows for accessing any data available on the Census API.\n\n<br>\n\n## `library(censusapi)`\n\n`library(censusapi)` by Hannah Recht ([complete intro here](https://cran.r-project.org/web/packages/censusapi/vignettes/getting-started.html)) can access any published table that is accessible through the Census Bureau API. A full listing is available [here](https://api.census.gov/data.html).\n\nYou will need to [apply for a Census API key](https://api.census.gov/data/key_signup.html) and [add it to your R session](https://cran.r-project.org/web/packages/censusapi/vignettes/getting-started.html). Don't add your API key to your script and don't add it to a GitHub repository!\n\nHere is a simple example that pulls median household income and its margin of error for Census tracts in Alabama:\n\n```{r censusapi}\nlibrary(tidyverse)\nlibrary(purrr)\nlibrary(censusapi)\nvars <- c(\n  \"B19013_001E\",  # median household income estimate\n  \"B19013_001M\"   # median household income margin of error\n)\n\ngetCensus(name = \"acs/acs5\",\n\t\t\t\t\tkey = Sys.getenv(\"CENSUS_API_KEY\"),\n\t\t\t\t\tvars = vars, \n\t\t\t\t\tregion = \"tract:*\",\n\t\t\t\t\tregionin = \"state:01\",\n\t\t\t\t\tvintage = 2015) %>%\n\tas_tibble()\n```\n\nSmaller geographies like Census tracts can only be pulled state-by-state. This example demonstrates how to iterate across FIPS codes to pull Census tracts for multiple states. The process is as follows:\n\n1.  Pick the variables of interest\n2.  Create a vector of state FIPS codes for the states of interest\n3.  Create a custom function that works on a single state FIPS code\n4.  Iterate the function along the vector of state FIPS codes with `map_df()` from `library(purrr)`\n\nHere is an example that pulls median household income at the Census tract level for multiple states:\n\n```{r censusapi-iteration}\n# variables of interest\nvars <- c(\n  \"B19013_001E\",  # median household income estimate\n  \"B19013_001M\"   # median household income margin of error\n)\n\n# states of interest: alabama, alaska, arizona\nstate_fips <- c(\"01\", \"02\", \"04\")\n\t\n# create a custom function that works for one state\nget_income <- function(state_fips) {\n\t\n\tincome_data <- getCensus(name = \"acs/acs5\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t key = Sys.getenv(\"CENSUS_API_KEY\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\t vars = vars, \n\t\t\t\t\t\t\t\t\t\t\t\t\t region = \"tract:*\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t regionin = paste0(\"state:\", state_fips),\n\t\t\t\t\t\t\t\t\t\t\t\t\t vintage = 2015)\n\t\n\treturn(income_data)\n\t\n}\n\n# iterate the function\nmap_df(.x = state_fips, # iterate along the vector of state fips codes\n\t\t\t .f = get_income) %>% # apply get_income() to each fips_code  \n\tas_tibble() \n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":{"html_document":{"includes":{"in_header":"analytics.html"},"css":"styles.css","code_folding":"show","toc":true,"toc_float":true,"pandoc_args":"--tab-stop=2"}},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","include-in-header":["analytics.html"],"css":["styles.css"],"toc":true,"output-file":"getting-data.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}